%!PS-Adobe-3.0 EPSF-3.0
%%Title: WMF2EPS: visible-node.wmf
%%Creator: PScript5.dll Version 5.2.2
%%CreationDate: 4/9/2014 16:18:24
%%For: nguyenle
%%BoundingBox: 0 0 230 162
%%Pages: 1
%%Orientation: Portrait
%%PageOrder: Ascend
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentData: Clean7Bit
%%TargetDevice: (WMF2EPS Color PS) (2010.0) 2
%%LanguageLevel: 2
%%EndComments

%%BeginDefaults
%%PageBoundingBox: 0 0 230 162
%%ViewingOrientation: 1 0 0 1
%%EndDefaults

%%BeginProlog
%%BeginResource: file Pscript_WinNT_ErrorHandler 5.0 0
/currentpacking where{pop/oldpack currentpacking def/setpacking where{pop false
setpacking}if}if/$brkpage 64 dict def $brkpage begin/prnt{dup type/stringtype
ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def currentpoint/toy exch
def/tox exch def 1 setgray newpath tox toy 2 sub moveto 0 ty rlineto tx 0
rlineto 0 ty neg rlineto closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def/=={/cp 0 def
typeprint nl}def/typeprint{dup type exec}readonly def/lmargin 72 def/rmargin 72
def/tprint{dup length cp add rmargin gt{nl/cp 0 def}if dup length cp add/cp
exch def prnt}readonly def/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def/realtype{cvsprint}readonly def/booleantype
{cvsprint}readonly def/operatortype{(--)tprint =string cvs tprint(-- )tprint}
readonly def/marktype{pop(-mark- )tprint}readonly def/dicttype{pop
(-dictionary- )tprint}readonly def/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def/savetype{pop(-savelevel- )
tprint}readonly def/fonttype{pop(-fontid- )tprint}readonly def/nametype{dup
xcheck not{(/)tprint}if cvsprint}readonly def/stringtype{dup rcheck{(\()tprint
tprint(\))tprint}{pop(-string- )tprint}ifelse}readonly def/arraytype{dup rcheck
{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}forall(])
tprint}ifelse}{pop(-array- )tprint}ifelse}readonly def/packedarraytype{dup
rcheck{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}
forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse}readonly def/courier
/Courier findfont 10 scalefont def end errordict/handleerror{systemdict begin
$error begin $brkpage begin newerror{/newerror false store vmstatus pop pop 0
ne{grestoreall}if errorname(VMerror)ne{showpage}if initgraphics courier setfont
lmargin 720 moveto errorname(VMerror)eq{userdict/ehsave known{clear userdict
/ehsave get restore 2 vmreclaim}if vmstatus exch pop exch pop PrtVMMsg}{
(ERROR: )prnt errorname prnt nl(OFFENDING COMMAND: )prnt/command load prnt
$error/ostack known{nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}
repeat}if}ifelse systemdict/showpage get exec(%%[ Error: )print errorname
=print(; OffendingCommand: )print/command load =print( ]%%)= flush}if end end
end}dup 0 systemdict put dup 4 $brkpage put bind readonly put/currentpacking
where{pop/setpacking where{pop oldpack setpacking}if}if
%%EndResource
userdict /Pscript_WinNT_Incr 230 dict dup begin put
%%BeginResource: file Pscript_FatalError 5.0 0
userdict begin/FatalErrorIf{{initgraphics findfont 1 index 0 eq{exch pop}{dup
length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding
{ISOLatin1Encoding}stopped{StandardEncoding}if def currentdict end
/ErrFont-Latin1 exch definefont}ifelse exch scalefont setfont counttomark 3 div
cvi{moveto show}repeat showpage quit}{cleartomark}ifelse}bind def end
%%EndResource
userdict begin/PrtVMMsg{vmstatus exch sub exch pop gt{[
(This job requires more memory than is available in this printer.)100 500
(Try one or more of the following, and then print again:)100 485
(For the output format, choose Optimize For Portability.)115 470
(In the Device Settings page, make sure the Available PostScript Memory is accurate.)
115 455(Reduce the number of fonts in the document.)115 440
(Print the document in parts.)115 425 12/Times-Roman showpage
(%%[ PrinterError: Low Printer VM ]%%)= true FatalErrorIf}if}bind def end
version cvi 2016 ge{/VM?{pop}bind def}{/VM? userdict/PrtVMMsg get def}ifelse
%%BeginResource: file Pscript_Win_Basic 5.0 0
/d/def load def/,/load load d/~/exch , d/?/ifelse , d/!/pop , d/`/begin , d/^
/index , d/@/dup , d/+/translate , d/$/roll , d/U/userdict , d/M/moveto , d/-
/rlineto , d/&/currentdict , d/:/gsave , d/;/grestore , d/F/false , d/T/true ,
d/N/newpath , d/E/end , d/Ac/arc , d/An/arcn , d/A/ashow , d/D/awidthshow , d/C
/closepath , d/V/div , d/O/eofill , d/L/fill , d/I/lineto , d/-c/curveto , d/-M
/rmoveto , d/+S/scale , d/Ji/setfont , d/Lc/setlinecap , d/Lj/setlinejoin , d
/Lw/setlinewidth , d/Lm/setmiterlimit , d/sd/setdash , d/S/show , d/LH/showpage
, d/K/stroke , d/W/widthshow , d/R/rotate , d/L2? false/languagelevel where{pop
languagelevel 2 ge{pop true}if}if d L2?{/xS/xshow , d/yS/yshow , d/zS/xyshow ,
d}if/b{bind d}bind d/bd{bind d}bind d/xd{~ d}bd/ld{, d}bd/bn/bind ld/lw/Lw ld
/lc/Lc ld/lj/Lj ld/sg/setgray ld/ADO_mxRot null d/self & d/OrgMx matrix
currentmatrix d/reinitialize{: OrgMx setmatrix[/TextInit/GraphInit/UtilsInit
counttomark{@ where{self eq}{F}?{cvx exec}{!}?}repeat cleartomark ;}b
/initialize{`{/Pscript_Win_Data where{!}{U/Pscript_Win_Data & put}?/ADO_mxRot ~
d/TextInitialised? F d reinitialize E}{U/Pscript_Win_Data 230 dict @ ` put
/ADO_mxRot ~ d/TextInitialised? F d reinitialize}?}b/terminate{!{& self eq
{exit}{E}?}loop E}b/suspend/terminate , d/resume{` Pscript_Win_Data `}b U `
/lucas 21690 d/featurebegin{countdictstack lucas[}b/featurecleanup{stopped
{cleartomark @ lucas eq{! exit}if}loop countdictstack ~ sub @ 0 gt{{E}repeat}
{!}?}b E/snap{transform 0.25 sub round 0.25 add ~ 0.25 sub round 0.25 add ~
itransform}b/dsnap{dtransform round ~ round ~ idtransform}b/nonzero_round{@ 0.5
ge{round}{@ -0.5 lt{round}{0 ge{1}{-1}?}?}?}b/nonzero_dsnap{dtransform
nonzero_round ~ nonzero_round ~ idtransform}b U<04>cvn{}put/rr{1 ^ 0 - 0 ~ -
neg 0 - C}b/irp{4 -2 $ + +S fx 4 2 $ M 1 ^ 0 - 0 ~ - neg 0 -}b/rp{4 2 $ M 1 ^ 0
- 0 ~ - neg 0 -}b/solid{[]0 sd}b/g{@ not{U/DefIf_save save put}if U/DefIf_bool
2 ^ put}b/DefIf_El{if U/DefIf_bool get not @{U/DefIf_save get restore}if}b/e
{DefIf_El !}b/UDF{L2?{undefinefont}{!}?}b/UDR{L2?{undefineresource}{! !}?}b
/freeVM{/Courier findfont[40 0 0 -40 0 0]makefont Ji 2 vmreclaim}b/hfRedefFont
{findfont @ length dict `{1 ^/FID ne{d}{! !}?}forall & E @ ` ~{/CharStrings 1
dict `/.notdef 0 d & E d}if/Encoding 256 array 0 1 255{1 ^ ~/.notdef put}for d
E definefont !}bind d/hfMkCIDFont{/CIDFont findresource @ length 2 add dict `{1
^ @/FID eq ~ @/XUID eq ~/UIDBase eq or or{! !}{d}?}forall/CDevProc ~ d/Metrics2
16 dict d/CIDFontName 1 ^ d & E 1 ^ ~/CIDFont defineresource ![~]composefont !}
bind d
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L2 5.0 0
/rf/rectfill , d/fx{1 1 dtransform @ 0 ge{1 sub 0.5}{1 add -0.5}? 3 -1 $ @ 0 ge
{1 sub 0.5}{1 add -0.5}? 3 1 $ 4 1 $ idtransform 4 -2 $ idtransform}b/BZ{4 -2 $
snap + +S fx rf}b/rs/rectstroke , d/rc/rectclip , d/UtilsInit{currentglobal{F
setglobal}if}b/scol{! setcolor}b/colspA/DeviceGray d/colspABC/DeviceRGB d
/colspRefresh{colspABC setcolorspace}b/SetColSpace{colspABC setcolorspace}b
/resourcestatus where{!/ColorRendering/ProcSet resourcestatus{! ! T}{F}?}{F}?
not{/ColorRendering<</GetHalftoneName{currenthalftone @/HalftoneName known{
/HalftoneName get}{!/none}?}bn/GetPageDeviceName{currentpagedevice @
/PageDeviceName known{/PageDeviceName get @ null eq{!/none}if}{!/none}?}bn
/GetSubstituteCRD{!/DefaultColorRendering/ColorRendering resourcestatus{! !
/DefaultColorRendering}{(DefaultColorRendering*){cvn exit}127 string
/ColorRendering resourceforall}?}bn>>/defineresource where{!/ProcSet
defineresource !}{! !}?}if/buildcrdname{/ColorRendering/ProcSet findresource `
mark GetHalftoneName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)
GetPageDeviceName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)5 ^ 0 5
-1 1{^ length add}for string 6 1 $ 5 ^ 5{~ 1 ^ cvs length 1 ^ length 1 ^ sub
getinterval}repeat ! cvn 3 1 $ ! ! E}b/definecolorrendering{~ buildcrdname ~
/ColorRendering defineresource !}b/findcolorrendering where{!}{
/findcolorrendering{buildcrdname @/ColorRendering resourcestatus{! ! T}{
/ColorRendering/ProcSet findresource ` GetSubstituteCRD E F}?}b}?
/selectcolorrendering{findcolorrendering !/ColorRendering findresource
setcolorrendering}b/G2UBegin{findresource/FontInfo get/GlyphNames2Unicode get
`}bind d/G2CCBegin{findresource/FontInfo get/GlyphNames2HostCode get `}bind d
/G2UEnd{E}bind d/AddFontInfoBegin{/FontInfo 8 dict @ `}bind d/AddFontInfo{
/GlyphNames2Unicode 16 dict d/GlyphNames2HostCode 16 dict d}bind d
/AddFontInfoEnd{E d}bind d/T0AddCFFMtx2{/CIDFont findresource/Metrics2 get ` d
E}bind d
%%EndResource
end
%%EndProlog

%%BeginSetup
[ 1 0 0 1 0 0 ] false Pscript_WinNT_Incr dup /initialize get exec
1 setlinecap 1 setlinejoin
/mysetup [ 72 600 V 0 0 -72 600 V 0 161.85826 ] def 
%%EndSetup

%%Page: 1 1
%%PageBoundingBox: 0 0 230 162
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

0 0 0 1 scol Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Text 5.0 0
/TextInit{TextInitialised? not{/Pscript_Windows_Font & d/TextInitialised? T d
/fM[1 0 0 1 0 0]d/mFM matrix d/iMat[1 0 0.212557 1 0 0]d}if}b/copyfont{1 ^
length add dict `{1 ^/FID ne{d}{! !}?}forall & E}b/EncodeDict 11 dict d/bullets
{{/bullet}repeat}b/rF{3 copyfont @ ` ~ EncodeDict ~ get/Encoding ~ 3 ^/0 eq{&
/CharStrings known{CharStrings/Eth known not{! EncodeDict/ANSIEncodingOld get}
if}if}if d E}b/mF{@ 7 1 $ findfont ~{@/Encoding get @ StandardEncoding eq{! T}{
{ISOLatin1Encoding}stopped{! F}{eq}?{T}{@ ` T 32 1 127{Encoding 1 ^ get
StandardEncoding 3 -1 $ get eq and}for E}?}?}{F}?{1 ^ ~ rF}{0 copyfont}? 6 -2 $
! ! ~ !/pd_charset @ where{~ get 128 eq{@ FDV 2 copy get @ length array copy
put pd_CoverFCRange}if}{!}? 2 ^ ~ definefont fM 5 4 -1 $ put fM 4 0 put fM
makefont Pscript_Windows_Font 3 1 $ put}b/sLT{: Lw -M currentpoint snap M 0 - 0
Lc K ;}b/xUP null d/yUP null d/uW null d/xSP null d/ySP null d/sW null d/sSU{N
/uW ~ d/yUP ~ d/xUP ~ d}b/sU{xUP yUP uW sLT}b/sST{N/sW ~ d/ySP ~ d/xSP ~ d}b/sT
{xSP ySP sW sLT}b/sR{: + R 0 0 M}b/sRxy{: matrix astore concat 0 0 M}b/eR/; , d
/AddOrigFP{{&/FontInfo known{&/FontInfo get length 6 add}{6}? dict `
/WinPitchAndFamily ~ d/WinCharSet ~ d/OrigFontType ~ d/OrigFontStyle ~ d
/OrigFontName ~ d & E/FontInfo ~ d}{! ! ! ! !}?}b/mFS{makefont
Pscript_Windows_Font 3 1 $ put}b/mF42D{0 copyfont `/FontName ~ d 2 copy ~ sub 1
add dict `/.notdef 0 d 2 copy 1 ~{@ 3 ^ sub Encoding ~ get ~ d}for & E
/CharStrings ~ d ! ! & @ E/FontName get ~ definefont}b/mF42{15 dict ` @ 4 1 $
FontName ~ d/FontType 0 d/FMapType 2 d/FontMatrix[1 0 0 1 0 0]d 1 ^ 254 add 255
idiv @ array/Encoding ~ d 0 1 3 -1 $ 1 sub{@ Encoding 3 1 $ put}for/FDepVector
Encoding length array d/CharStrings 2 dict `/.notdef 0 d & E d 0 1 Encoding
length 1 sub{@ @ 10 lt{! FontName length 1 add string}{100 lt{FontName length 2
add string}{FontName length 3 add string}?}? @ 0 FontName @ length string cvs
putinterval @ 3 -1 $ @ 4 1 $ 3 string cvs FontName length ~ putinterval cvn 1 ^
256 mul @ 255 add 3 -1 $ 4 ^ findfont mF42D FDepVector 3 1 $ put}for & @ E
/FontName get ~ definefont ! ! ! mF}b/mF_OTF_V{~ ! ~ ! 4 -1 $ ! findfont 2 ^ ~
definefont fM @ @ 4 6 -1 $ neg put 5 0 put 90 matrix R matrix concatmatrix
makefont Pscript_Windows_Font 3 1 $ put}b/mF_TTF_V{3{~ !}repeat 3 -1 $ !
findfont 1 ^ ~ definefont Pscript_Windows_Font 3 1 $ put}b/UmF{L2?
{Pscript_Windows_Font ~ undef}{!}?}b/UmF42{@ findfont/FDepVector get{/FontName
get undefinefont}forall undefinefont}b
%%EndResource
end reinitialize
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Encoding256 5.0 0
/CharCol256Encoding[/.notdef/breve/caron/dotaccent/dotlessi/fi/fl/fraction
/hungarumlaut/Lslash/lslash/minus/ogonek/ring/Zcaron/zcaron/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright/asterisk/plus/comma
/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S
/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore/grave
/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright
/asciitilde/.notdef/Euro/.notdef/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef
/.notdef/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis/.notdef/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/.notdef/registered
/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph
/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter
/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve
/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis]def EncodeDict/256 CharCol256Encoding put
%%EndResource
end reinitialize

%%IncludeResource: font Times-Roman
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Win_Euro_L2 5.0 0
/UseT3EuroFont{/currentdistillerparams where{pop currentdistillerparams
/CoreDistVersion get 4000 le}{false}ifelse}bind def/NewEuroT3Font?{dup/FontType
get 3 eq{dup/EuroFont known exch/BaseFont known and}{pop false}ifelse}bind def
/T1FontHasEuro{dup/CharStrings known not{dup NewEuroT3Font?{dup/EuroGlyphName
get exch/EuroFont get/CharStrings get exch known{true}{false}ifelse}{pop false}
ifelse}{dup/FontType get 1 eq{/CharStrings get/Euro known}{dup/InfoDict known{
/InfoDict get/Euro known}{/CharStrings get/Euro known}ifelse}ifelse}ifelse}bind
def/FontHasEuro{findfont dup/Blend known{pop true}{T1FontHasEuro}ifelse}bind
def/EuroEncodingIdx 1 def/EuroFontHdr{12 dict begin/FontInfo 10 dict dup begin
/version(001.000)readonly def/Notice(Copyright (c)1999 Adobe Systems
Incorporated. All Rights Reserved.)readonly def/FullName(Euro)readonly def
/FamilyName(Euro)readonly def/Weight(Regular)readonly def/isFixedPitch false
def/ItalicAngle 0 def/UnderlinePosition -100 def/UnderlineThickness 50 def end
readonly def/FontName/Euro def/Encoding 256 array 0 1 255{1 index exch/.notdef
put}for def/PaintType 0 def/FontType 1 def/FontMatrix[0.001 0 0 0.001 0 0]def
/FontBBox{-25 -23 1500 804}readonly def currentdict end dup/Private 20 dict dup
begin/ND{def}def/NP{put}def/lenIV -1 def/RD{string currentfile exch
readhexstring pop}def/-|{string currentfile exch readstring pop}executeonly def
/|-{def}executeonly def/|{put}executeonly def/BlueValues[-20 0 706 736 547 572]
|-/OtherBlues[-211 -203]|-/BlueScale 0.0312917 def/MinFeature{16 16}|-/StdHW
[60]|-/StdVW[71]|-/ForceBold false def/password 5839 def/Erode{8.5 dup 3 -1
roll 0.1 mul exch 0.5 sub mul cvi sub dup mul 71 0 dtransform dup mul exch dup
mul add le{pop pop 1.0 1.0}{pop pop 0.0 1.5}ifelse}def/OtherSubrs[{}{}{}
{systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]|-/Subrs 5 array dup 0
<8E8B0C100C110C110C210B>put dup 1<8B8C0C100B>put dup 2<8B8D0C100B>put dup 3<0B>
put dup 4<8E8C8E0C100C110A0B>put |- 2 index/CharStrings 256 dict dup begin
/.notdef<8b8b0d0e>def end end put put dup/FontName get exch definefont pop}bind
def/AddEuroGlyph{2 index exch EuroEncodingIdx 1 eq{EuroFontHdr}if systemdict
begin/Euro findfont dup dup/Encoding get 5 1 roll/Private get begin/CharStrings
get dup 3 index known{pop pop pop pop end end}{begin 1 index exch def end end
end EuroEncodingIdx dup 1 add/EuroEncodingIdx exch def exch put}ifelse}bind def
/GetNewXUID{currentdict/XUID known{[7 XUID aload pop]true}{currentdict/UniqueID
known{[7 UniqueID]true}{false}ifelse}ifelse}bind def/BuildT3EuroFont{exch 16
dict begin dup/FontName exch def findfont dup/Encoding get/Encoding exch def
dup length 1 add dict copy dup/FID undef begin dup dup/FontName exch def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for def GetNewXUID{/XUID
exch def}if currentdict end definefont pop/BaseFont exch findfont 1000
scalefont def/EuroFont exch findfont 1000 scalefont def pop/EuroGlyphName exch
def/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def/FontBBox BaseFont/FontBBox
get def/Char 1 string def/BuildChar{exch dup begin/Encoding get 1 index get
/Euro eq{BaseFont T1FontHasEuro{false}{true}ifelse}{false}ifelse{EuroFont
setfont pop userdict/Idx 0 put EuroFont/Encoding get{EuroGlyphName eq{exit}
{userdict/Idx Idx 1 add put}ifelse}forall userdict/Idx get}{dup dup Encoding
exch get BaseFont/Encoding get 3 1 roll put BaseFont setfont}ifelse Char 0 3 -1
roll put Char stringwidth newpath 0 0 moveto Char true charpath flattenpath
pathbbox setcachedevice 0 0 moveto Char show end}bind def currentdict end dup
/FontName get exch definefont pop}bind def/AddEuroToT1Font{dup findfont dup
length 10 add dict copy dup/FID undef begin/EuroFont 3 -1 roll findfont 1000
scalefont def CharStrings dup length 1 add dict copy begin/Euro{EuroFont
setfont pop EuroGBBox aload pop setcachedevice 0 0 moveto EuroGName glyphshow}
bind def currentdict end/CharStrings exch def GetNewXUID{/XUID exch def}if 3 1
roll/EuroGBBox exch def/EuroGName exch def currentdict end definefont pop}bind
def/BuildNewFont{UseT3EuroFont{BuildT3EuroFont}{pop AddEuroToT1Font}ifelse}bind
def/UseObliqueEuro{findfont/FontMatrix get dup 2 get 0 eq exch dup 0 get exch 3
get eq and UseT3EuroFont or}bind def
%%EndResource
end reinitialize
/Times-Roman FontHasEuro not
{
/Euro.Times-Roman
 [500 0 24 -14 493 676 ] 
<A3F8880DC0EB03F854F743950C0C037DA501F7A0BB01F805BB01F91EA501F869F8911584
F73A0576068478827E7F8B087F8B70AC438B082A8BFB0D6471FB700863067C5B05BE068A
7E8B878B7D08750764067D5B05C206A0FB7BF71858E88B088F0AC0EB03F84BF789950C0C
037DA501F7A0BB01F805BB01F91EA501CA8BACAC998B08988B95809076088F0AC0EB03F8
54F743950C0C037DA501F7A0BB01F805BB01F91EA501A00692F73705750675FB09417667
8B083A8B43C182F75E08F7740699BB05FB84069C078B978C978B9708F7950699BB05FBA1
069AF755D5B3D18B08AB8BDD71A2FB0708090E>
AddEuroGlyph
/Euro /Times-Roman /Times-Roman-Copy BuildNewFont
} if
F /F0 0 /256 T /Times-Roman mF 
/F0S64YFFFFFF9C F0 [100.02 0 0 -99.992 0 0 ] mFS
F0S64YFFFFFF9C Ji 
1079 118 M (Convex hull)[67 50 50 50 44 50 25 50 50 28  0]xS 
13 209 M (View limit )[72 28 44 72 25 28 27 78 27 28  0]xS 
103 329 M (vertex)[50 44 33 28 44  0]xS 
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Win_GdiObject 5.0 0
/SavedCTM null d/CTMsave{/SavedCTM SavedCTM currentmatrix d}b/CTMrestore
{SavedCTM setmatrix}b/mp null d/ADO_mxRot null d/GDIHMatrix null d
/GDIHPatternDict 22 dict d GDIHPatternDict `/PatternType 1 d/PaintType 2 d/Reps
L2?{1}{5}? d/XStep 8 Reps mul d/YStep XStep d/BBox[0 0 XStep YStep]d/TilingType
1 d/PaintProc{` 1 Lw[]0 sd PaintData , exec E}b/FGnd null d/BGnd null d
/HS_Horizontal{horiz}b/HS_Vertical{vert}b/HS_FDiagonal{fdiag}b/HS_BDiagonal
{biag}b/HS_Cross{horiz vert}b/HS_DiagCross{fdiag biag}b/MaxXYStep XStep YStep
gt{XStep}{YStep}? d/horiz{Reps{0 4 M XStep 0 - 0 8 +}repeat 0 -8 Reps mul + K}b
/vert{Reps{4 0 M 0 YStep - 8 0 +}repeat 0 -8 Reps mul + K}b/biag{Reps{0 0 M
MaxXYStep @ - 0 YStep neg M MaxXYStep @ - 0 8 +}repeat 0 -8 Reps mul + 0 YStep
M 8 8 - K}b/fdiag{Reps{0 0 M MaxXYStep @ neg - 0 YStep M MaxXYStep @ neg - 0 8
+}repeat 0 -8 Reps mul + MaxXYStep @ M 8 -8 - K}b E/makehatch{4 -2 $/yOrg ~ d
/xOrg ~ d GDIHPatternDict/PaintData 3 -1 $ put CTMsave GDIHMatrix setmatrix
GDIHPatternDict matrix xOrg yOrg + mp CTMrestore ~ U ~ 2 ^ put}b/h0{/h0
/HS_Horizontal makehatch}b/h1{/h1/HS_Vertical makehatch}b/h2{/h2/HS_FDiagonal
makehatch}b/h3{/h3/HS_BDiagonal makehatch}b/h4{/h4/HS_Cross makehatch}b/h5{/h5
/HS_DiagCross makehatch}b/GDIBWPatternMx null d/pfprep{save 8 1 $
/PatternOfTheDay 8 1 $ GDIBWPatternDict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/yExt
~ d/Width ~ d/BGnd ~ d/FGnd ~ d/Height yExt RepsV mul d/mx[Width 0 0 Height 0
0]d E build_pattern ~ !}b/pfbf{/fEOFill ~ d pfprep hbf fEOFill{O}{L}? restore}b
/GraphInit{GDIHMatrix null eq{/SavedCTM matrix d : ADO_mxRot concat 0 0 snap +
: 0.48 @ GDIHPatternDict ` YStep mul ~ XStep mul ~ nonzero_dsnap YStep V ~
XStep V ~ E +S/GDIHMatrix matrix currentmatrix readonly d ; : 0.24 -0.24 +S
GDIBWPatternDict ` Width Height E nonzero_dsnap +S/GDIBWPatternMx matrix
currentmatrix readonly d ; ;}if}b
%%EndResource
%%BeginResource: file Pscript_Win_GdiObject_L2 5.0 0
/GDIBWPatternDict 25 dict @ `/PatternType 1 d/PaintType 1 d/RepsV 1 d/RepsH 1 d
/BBox[0 0 RepsH 1]d/TilingType 1 d/XStep 1 d/YStep 1 d/Height 8 RepsV mul d
/Width 8 d/mx[Width 0 0 Height neg 0 Height]d/FGnd null d/BGnd null d
/SetBGndFGnd{BGnd null ne{BGnd aload ! scol BBox aload ! 2 ^ sub ~ 3 ^ sub ~
rf}if FGnd null ne{FGnd aload ! scol}if}b/PaintProc{` SetBGndFGnd RepsH{Width
Height F mx PaintData imagemask Width 0 +}repeat E}b E d/mp/makepattern , d
/build_pattern{CTMsave GDIBWPatternMx setmatrix/nupangle where{! nupangle -90
eq{nupangle R}if}if GDIBWPatternDict @ ` Width Height ne{Width Height gt{Width
Height V 1}{1 Height Width V}? +S}if xOrg yOrg E matrix + mp CTMrestore}b/hbf
{setpattern}b/hf{:/fEOFill ~ d ~ ! setpattern fEOFill{O}{L}? ;}b/pbf{: !
/fEOFill ~ d GDIBWPatternDict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/OutputBPP ~ d
/Height ~ d/Width ~ d/PaintType 1 d/PatternType 1 d/TilingType 1 d/BBox[0 0
Width Height]d/XStep Width d/YStep Height d/mx xOrg yOrg matrix + d 20 dict @ `
/ImageType 1 d/Width Width d/Height Height d/ImageMatrix[1 0 0 1 0 0]d
/BitsPerComponent 8 d OutputBPP 24 eq{/Decode[0 1 0 1 0 1]d}{OutputBPP 8 eq{
/Decode[0 1]d}{/Decode[0 1 0 1 0 1 0 1]d}?}?/DataSource{PaintData}d E/ImageDict
~ d/PaintProc{` ImageDict image E}b & mx makepattern setpattern E fEOFill{O}{L}
? ;}b/mask_pbf{:/fEOFill ~ d 20 dict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/Height ~
d/Width ~ d/PatternType 1 d/PaintType 2 d/TilingType 1 d/BBox[0 0 Width Height]
d/XStep Width d/YStep Height d/mx xOrg yOrg matrix + d/PaintProc{` Width Height
T 1 1 dtransform abs ~ abs ~ 0 0 3 -1 $ 0 0 6 array astore{PaintData}imagemask
E}b & mx makepattern setpattern E fEOFill{O}{L}? ;}b
%%EndResource
end reinitialize
1 Lj 1 Lc 3 Lw solid N 578 249 M 814 406 I : [ 0.832 0 0 0.832 0 0 ] concat K 
; N 814 406 M 1051 170 I : [ 0.832 0 0 0.832 0 0 ] concat K 
; N 1051 170 M 1208 328 I : [ 0.832 0 0 0.832 0 0 ] concat K 
; N 1208 328 M 1523 328 I : [ 0.832 0 0 0.832 0 0 ] concat K 
; N 1523 328 M 1318 721 I : [ 0.832 0 0 0.832 0 0 ] concat K 
; N 578 249 M 656 643 I : [ 0.832 0 0 0.832 0 0 ] concat K 
; N 656 643 M 499 800 I : [ 0.832 0 0 0.832 0 0 ] concat K 
; N 1051 847 M 1366 1022 I : [ 0.832 0 0 0.832 0 0 ] concat K 
; N 1318 721 M 1366 1022 I : [ 0.832 0 0 0.832 0 0 ] concat K 
; 1 0 0 1 scol N 578 249 M 499 800 I : [ 0.832 0 0 0.832 0 0 ] concat K 
; N 575 271 M 577 272 I 580 272 I 581 271 I 584 271 I 588 270 I 591 267 I 595 265 I 598 260 I 600 257 I 600 255 I 600 252 I 600 250 I 600 248 I 600 245 I 600 243 I 599 239 I 596 235 I 593 232 I 590 230 I 585 227 I 584 226 I 581 226 I 581 226 I 579 226 I 576 226 I 574 226 I 572 226 I 568 228 I 564 230 I 560 234 I 558 237 I 556 241 I 555 243 I 555 245 I 555 248 I 555 250 I 555 253 I 555 255 I 557 259 I 560 263 I 562 266 I 566 269 I 570 270 I 572 271 I 575 271 I C 
 O N 578 249 M 1051 170 I : [ 0.832 0 0 0.832 0 0 ] concat K 
; N 1051 170 M 1523 328 I : [ 0.832 0 0 0.832 0 0 ] concat K 
; 0 0 0 1 scol N 499 800 M 735 800 I : [ 0.832 0 0 0.832 0 0 ] concat K 
; N 735 800 M 820 1021 I : [ 0.832 0 0 0.832 0 0 ] concat K 
; 1 0 0 1 scol N 1523 328 M 1366 1022 I : [ 0.832 0 0 0.832 0 0 ] concat K 
; N 1366 1022 M 820 1021 I : [ 0.832 0 0 0.832 0 0 ] concat K 
; N 1342 1022 M 1342 1024 I 1343 1027 I 1343 1029 I 1344 1031 I 1346 1035 I 1349 1039 I 1352 1041 I 1356 1044 I 1359 1044 I 1361 1044 I 1363 1045 I 1366 1045 I 1368 1045 I 1370 1044 I 1372 1044 I 1374 1044 I 1378 1041 I 1381 1039 I 1385 1035 I 1386 1031 I 1387 1029 I 1388 1027 I 1388 1024 I 1388 1022 I 1388 1022 I 1388 1019 I 1388 1018 I 1387 1015 I 1386 1014 I 1385 1009 I 1381 1006 I 1378 1003 I 1375 1001 I 1372 1000 I 1370 999 I 1368 999 I 1366 999 I 1363 999 I 1361 999 I 1359 1000 I 1356 1001 I 1352 1003 I 1349 1006 I 1346 1009 I 1344 1013 I 1343 1015 I 1343 1018 I 1342 1019 I 1342 1022 I C 
 O N 499 800 M 820 1021 I : [ 0.832 0 0 0.832 0 0 ] concat K 
; 0 0 0 1 scol N 1051 847 M 820 1021 I : [ 0.832 0 0 0.832 0 0 ] concat K 
; 1 Lw solid N 579 250 M 574 267 I 573 268 I 572 268 I 572 268 I 571 268 I 571 267 I 571 267 I 571 266 I 576 249 I 577 248 I 578 248 I 578 248 I 579 248 I 579 250 I 579 250 I C 
570 280 M 564 298 I 563 299 I 563 299 I 562 299 I 561 298 I 561 297 I 567 279 I 568 278 I 568 278 I 569 278 I 569 279 I 570 279 I 570 280 I 570 280 I 570 280 I C 
560 310 M 555 328 I 555 329 I 554 329 I 553 329 I 553 329 I 552 329 I 552 328 I 552 327 I 557 310 I 558 309 I 559 309 I 560 310 I 560 310 I 560 310 I 560 310 I C 
550 341 M 545 359 I 545 360 I 543 360 I 542 359 I 542 358 I 548 340 I 549 340 I 549 340 I 550 340 I 550 340 I 550 340 I 550 341 I 550 341 I C 
541 371 M 535 390 I 535 390 I 535 390 I 534 390 I 533 390 I 533 389 I 533 389 I 539 370 I 539 370 I 540 370 I 540 370 I 541 370 I 541 371 I 541 371 I 541 371 I C 
531 402 M 526 420 I 525 420 I 525 420 I 524 420 I 524 420 I 523 420 I 523 419 I 529 401 I 530 400 I 530 400 I 530 400 I 531 400 I 531 401 I 531 401 I 531 402 I 531 402 I C 
522 433 M 516 450 I 515 451 I 515 451 I 515 451 I 514 450 I 514 450 I 514 450 I 520 432 I 520 431 I 520 431 I 521 431 I 522 431 I 522 432 I 522 433 I 522 433 I C 
512 463 M 507 481 I 506 482 I 505 482 I 505 481 I 504 480 I 505 480 I 510 462 I 510 461 I 511 461 I 512 462 I 512 463 I 512 463 I C 
503 494 M 497 511 I 496 512 I 496 512 I 495 512 I 495 512 I 495 511 I 495 510 I 500 493 I 500 492 I 501 492 I 501 492 I 502 492 I 503 493 I 503 493 I 503 494 I 503 494 I C 
493 525 M 488 542 I 487 542 I 487 543 I 486 543 I 486 543 I 485 543 I 485 542 I 485 542 I 485 541 I 490 524 I 491 523 I 492 522 I 492 523 I 493 523 I 493 523 I 493 525 I 493 525 I C 
484 555 M 478 573 I 477 574 I 477 574 I 476 574 I 475 573 I 475 572 I 481 554 I 482 553 I 482 553 I 483 553 I 484 554 I 484 555 I 484 555 I 484 555 I C 
475 585 M 469 603 I 469 604 I 468 604 I 467 604 I 466 603 I 466 603 I 466 602 I 471 585 I 472 584 I 473 584 I 474 585 I 475 585 I 475 585 I 475 585 I C 
465 616 M 459 634 I 459 635 I 458 635 I 457 635 I 456 634 I 456 633 I 462 615 I 463 615 I 463 614 I 464 614 I 465 615 I 465 615 I 465 616 I 465 616 I C 
455 646 M 450 665 I 449 665 I 449 665 I 448 665 I 447 665 I 447 665 I 447 664 I 447 664 I 453 645 I 453 645 I 454 645 I 455 645 I 455 645 I 455 645 I 455 646 I 455 646 I 455 646 I C 
445 677 M 440 695 I 440 695 I 439 695 I 438 695 I 438 695 I 437 695 I 437 694 I 443 676 I 444 675 I 444 675 I 445 675 I 445 676 I 445 677 I 445 677 I C 
436 707 M 430 725 I 430 726 I 429 726 I 428 725 I 428 725 I 428 725 I 434 707 I 434 706 I 435 705 I 436 706 I 436 707 I 436 707 I 436 707 I C 
426 738 M 421 756 I 420 756 I 420 757 I 420 757 I 419 756 I 418 755 I 419 755 I 424 737 I 425 736 I 425 736 I 425 736 I 426 737 I 426 738 I 426 738 I C 
417 769 M 411 786 I 410 787 I 410 787 I 410 787 I 410 787 I 409 786 I 409 786 I 409 785 I 415 768 I 415 767 I 415 767 I 415 767 I 416 767 I 417 768 I 417 768 I 417 769 I 417 769 I C 
407 799 M 402 817 I 401 817 I 401 818 I 400 818 I 400 818 I 400 817 I 400 817 I 400 816 I 405 798 I 405 798 I 406 797 I 406 797 I 407 798 I 407 799 I 407 799 I C 
398 829 M 392 847 I 391 848 I 390 849 I 390 848 I 390 847 I 395 829 I 396 828 I 397 828 I 398 829 I 398 829 I 398 829 I 398 829 I C 
389 860 M 383 878 I 383 879 I 382 879 I 381 879 I 381 879 I 380 878 I 380 878 I 380 877 I 385 859 I 386 859 I 387 859 I 387 859 I 388 859 I 389 859 I 389 860 I 389 860 I C 
379 890 M 373 909 I 373 909 I 372 909 I 371 909 I 371 909 I 370 909 I 370 908 I 376 889 I 377 889 I 377 889 I 378 889 I 379 889 I 379 890 I 379 890 I 379 890 I C 
370 921 M 364 939 I 363 939 I 363 940 I 362 939 I 361 939 I 361 939 I 361 938 I 367 920 I 367 919 I 368 919 I 369 919 I 369 919 I 370 920 I 370 920 I 370 921 I 370 921 I C 
360 952 M 354 969 I 354 970 I 353 970 I 352 970 I 352 969 I 351 969 I 351 969 I 357 951 I 358 950 I 359 950 I 360 950 I 360 952 I 360 952 I C 
350 982 M 345 1000 I 344 1001 I 343 1001 I 342 1000 I 342 999 I 342 999 I 348 981 I 348 981 I 348 980 I 349 980 I 350 980 I 350 981 I 350 982 I 350 982 I 350 982 I C 
340 1013 M 335 1030 I 335 1031 I 334 1032 I 334 1031 I 333 1031 I 332 1030 I 333 1029 I 338 1012 I 339 1011 I 340 1011 I 340 1011 I 340 1012 I 340 1013 I 340 1013 I C 
331 1044 M 325 1061 I 325 1062 I 325 1062 I 324 1062 I 323 1061 I 323 1061 I 323 1060 I 329 1043 I 329 1042 I 330 1042 I 330 1042 I 330 1042 I 330 1042 I 331 1042 I 331 1043 I 331 1044 I 331 1044 I C 
321 1074 M 316 1092 I 315 1092 I 315 1093 I 315 1093 I 315 1093 I 314 1092 I 314 1091 I 314 1091 I 319 1073 I 320 1072 I 320 1072 I 320 1072 I 321 1073 I 321 1074 I 321 1074 I 321 1074 I C 
312 1104 M 306 1122 I 305 1123 I 305 1123 I 304 1123 I 304 1121 I 310 1104 I 310 1103 I 311 1103 I 312 1104 I 312 1104 I 312 1104 I 312 1104 I C 
303 1135 M 297 1153 I 297 1154 I 296 1154 I 295 1154 I 295 1154 I 295 1153 I 295 1153 I 295 1152 I 300 1134 I 300 1134 I 301 1134 I 301 1134 I 302 1134 I 303 1134 I 303 1135 I 303 1135 I C 
293 1165 M 287 1184 I 287 1184 I 286 1184 I 285 1184 I 285 1184 I 285 1183 I 290 1164 I 291 1164 I 291 1164 I 292 1164 I 293 1164 I 293 1164 I 293 1165 I 293 1165 I 293 1165 I C 
284 1196 M 278 1214 I 277 1214 I 277 1214 I 276 1214 I 275 1214 I 275 1214 I 275 1213 I 281 1195 I 281 1194 I 282 1194 I 283 1194 I 284 1195 I 284 1195 I 284 1196 I 284 1196 I C 
274 1227 M 268 1244 I 268 1245 I 266 1245 I 266 1244 I 265 1244 I 265 1244 I 271 1226 I 272 1225 I 273 1225 I 274 1225 I 274 1227 I 274 1227 I C 
265 1257 M 264 1258 I 264 1259 I 263 1259 I 262 1259 I 262 1258 I 261 1258 I 261 1257 I 262 1256 I 262 1256 I 262 1255 I 263 1255 I 264 1255 I 265 1256 I 265 1257 I 265 1257 I 265 1257 I C 
:  L ; K 
N 263 1256 M 280 1252 I 281 1252 I 282 1253 I 282 1253 I 282 1254 I 282 1254 I 282 1254 I 281 1255 I 263 1259 I 263 1259 I 262 1259 I 262 1259 I 261 1258 I 261 1257 I 262 1257 I 262 1256 I 263 1256 I 263 1256 I C 
294 1249 M 312 1245 I 313 1245 I 313 1246 I 314 1247 I 314 1247 I 314 1248 I 313 1249 I 295 1252 I 294 1252 I 294 1252 I 293 1251 I 293 1250 I 293 1250 I 294 1249 I 294 1249 I C 
325 1243 M 344 1239 I 344 1239 I 345 1239 I 345 1239 I 345 1240 I 345 1241 I 345 1241 I 344 1242 I 325 1245 I 325 1245 I 325 1245 I 324 1244 I 324 1244 I 325 1244 I 325 1243 I 325 1243 I C 
356 1236 M 375 1232 I 375 1233 I 376 1234 I 376 1234 I 376 1234 I 375 1234 I 375 1235 I 357 1239 I 356 1239 I 356 1239 I 355 1238 I 355 1237 I 355 1237 I 356 1236 I 356 1236 I C 
388 1229 M 406 1225 I 406 1225 I 407 1226 I 408 1227 I 408 1227 I 407 1228 I 406 1228 I 388 1232 I 388 1232 I 387 1232 I 387 1231 I 387 1230 I 387 1230 I 388 1229 I 388 1229 I C 
419 1223 M 437 1219 I 438 1219 I 438 1219 I 439 1219 I 439 1220 I 439 1220 I 439 1221 I 438 1221 I 420 1225 I 419 1225 I 419 1225 I 418 1224 I 418 1224 I 418 1224 I 419 1223 I 419 1223 I C 
450 1216 M 469 1212 I 469 1212 I 470 1213 I 470 1214 I 470 1214 I 470 1214 I 469 1214 I 451 1219 I 450 1219 I 450 1218 I 450 1217 I 450 1217 I 450 1216 I 450 1216 I 450 1216 I C 
481 1209 M 500 1205 I 500 1205 I 501 1206 I 501 1206 I 501 1207 I 501 1207 I 501 1208 I 500 1208 I 482 1212 I 482 1212 I 481 1212 I 480 1211 I 480 1211 I 480 1210 I 480 1210 I 481 1209 I 481 1209 I 481 1209 I C 
513 1203 M 531 1199 I 532 1199 I 532 1199 I 533 1200 I 533 1200 I 533 1201 I 532 1201 I 514 1205 I 513 1205 I 512 1205 I 512 1204 I 512 1204 I 512 1204 I 513 1203 I 513 1203 I C 
545 1196 M 562 1192 I 563 1192 I 564 1193 I 564 1193 I 564 1193 I 564 1194 I 564 1194 I 563 1194 I 545 1199 I 545 1199 I 544 1199 I 543 1198 I 543 1197 I 544 1197 I 545 1196 I 545 1196 I C 
575 1189 M 594 1185 I 595 1185 I 595 1186 I 595 1187 I 595 1188 I 595 1188 I 595 1188 I 576 1192 I 575 1192 I 575 1192 I 575 1191 I 575 1190 I 575 1190 I 575 1189 I 575 1189 I C 
607 1183 M 625 1179 I 625 1179 I 626 1179 I 626 1179 I 626 1180 I 626 1181 I 625 1181 I 607 1185 I 607 1185 I 606 1185 I 605 1184 I 605 1184 I 606 1184 I 607 1183 I 607 1183 I C 
638 1176 M 656 1172 I 657 1172 I 657 1172 I 658 1173 I 658 1174 I 658 1174 I 657 1174 I 639 1179 I 638 1179 I 638 1179 I 637 1178 I 637 1178 I 637 1177 I 638 1176 I 638 1176 I C 
670 1169 M 688 1165 I 688 1165 I 689 1165 I 690 1166 I 690 1167 I 689 1168 I 688 1168 I 670 1172 I 670 1172 I 669 1172 I 669 1171 I 669 1170 I 669 1170 I 669 1169 I 670 1169 I 670 1169 I C 
700 1163 M 719 1159 I 720 1159 I 720 1159 I 720 1159 I 720 1159 I 720 1160 I 720 1161 I 720 1161 I 720 1161 I 701 1165 I 700 1165 I 700 1165 I 700 1164 I 700 1164 I 700 1164 I 700 1164 I 700 1163 I 700 1163 I 700 1163 I C 
732 1156 M 750 1152 I 750 1152 I 751 1152 I 752 1153 I 752 1154 I 751 1154 I 750 1154 I 733 1159 I 732 1159 I 731 1159 I 731 1158 I 731 1157 I 731 1157 I 731 1156 I 732 1156 I 732 1156 I C 
763 1149 M 781 1145 I 782 1145 I 783 1145 I 783 1146 I 783 1146 I 783 1148 I 783 1148 I 782 1148 I 764 1152 I 763 1152 I 763 1152 I 762 1151 I 762 1150 I 762 1150 I 763 1149 I 763 1149 I C 
795 1143 M 813 1139 I 814 1139 I 815 1139 I 815 1140 I 815 1141 I 814 1141 I 814 1141 I 795 1145 I 795 1145 I 794 1145 I 794 1144 I 794 1144 I 794 1144 I 795 1143 I 795 1143 I C 
826 1136 M 844 1132 I 845 1132 I 845 1132 I 845 1133 I 845 1134 I 845 1134 I 845 1134 I 826 1139 I 826 1139 I 825 1139 I 825 1138 I 825 1137 I 825 1136 I 826 1136 I 826 1136 I C 
857 1129 M 875 1125 I 876 1125 I 876 1125 I 877 1126 I 877 1127 I 877 1128 I 876 1128 I 858 1132 I 857 1132 I 857 1132 I 856 1131 I 856 1131 I 856 1129 I 857 1129 I 857 1129 I C 
889 1123 M 907 1119 I 907 1119 I 908 1119 I 908 1119 I 908 1120 I 908 1121 I 907 1121 I 889 1125 I 889 1125 I 888 1125 I 887 1124 I 887 1124 I 888 1123 I 889 1123 I 889 1123 I C 
920 1116 M 938 1112 I 939 1112 I 939 1112 I 940 1113 I 940 1113 I 940 1114 I 940 1114 I 939 1114 I 920 1119 I 920 1119 I 920 1119 I 919 1118 I 919 1118 I 919 1117 I 919 1116 I 920 1116 I 920 1116 I 920 1116 I C 
951 1109 M 970 1105 I 970 1105 I 971 1105 I 971 1106 I 971 1107 I 971 1107 I 970 1108 I 951 1112 I 951 1112 I 950 1112 I 950 1111 I 950 1110 I 950 1109 I 950 1109 I 951 1109 I 951 1109 I C 
982 1103 M 1001 1099 I 1001 1099 I 1001 1099 I 1002 1099 I 1002 1099 I 1002 1100 I 1001 1101 I 1001 1101 I 983 1105 I 982 1105 I 982 1105 I 981 1104 I 981 1104 I 981 1103 I 982 1103 I 982 1103 I C 
1014 1096 M 1032 1092 I 1033 1092 I 1034 1093 I 1034 1094 I 1033 1094 I 1033 1094 I 1032 1094 I 1015 1099 I 1013 1099 I 1013 1098 I 1013 1097 I 1013 1096 I 1014 1096 I 1014 1096 I C 
1045 1089 M 1063 1085 I 1064 1085 I 1065 1085 I 1065 1086 I 1065 1087 I 1065 1087 I 1064 1088 I 1046 1092 I 1045 1092 I 1045 1092 I 1044 1091 I 1044 1090 I 1044 1089 I 1045 1089 I 1045 1089 I C 
1076 1083 M 1095 1079 I 1096 1079 I 1096 1079 I 1096 1079 I 1096 1080 I 1096 1080 I 1096 1081 I 1077 1085 I 1076 1085 I 1076 1085 I 1076 1084 I 1076 1084 I 1076 1083 I 1076 1083 I 1076 1083 I C 
1108 1076 M 1126 1072 I 1126 1072 I 1127 1072 I 1127 1073 I 1127 1074 I 1127 1074 I 1126 1074 I 1108 1079 I 1108 1079 I 1107 1079 I 1106 1078 I 1106 1077 I 1107 1076 I 1108 1076 I 1108 1076 I C 
1139 1069 M 1157 1065 I 1158 1065 I 1159 1066 I 1159 1066 I 1159 1067 I 1159 1067 I 1158 1068 I 1140 1072 I 1139 1072 I 1138 1071 I 1138 1071 I 1138 1070 I 1138 1069 I 1139 1069 I 1139 1069 I 1139 1069 I C 
1171 1063 M 1189 1059 I 1189 1059 I 1190 1059 I 1190 1059 I 1190 1060 I 1190 1060 I 1189 1061 I 1171 1065 I 1171 1065 I 1170 1064 I 1169 1064 I 1169 1064 I 1170 1063 I 1170 1063 I 1171 1063 I 1171 1063 I C 
1201 1056 M 1220 1052 I 1221 1052 I 1221 1052 I 1221 1053 I 1221 1053 I 1221 1054 I 1221 1054 I 1221 1054 I 1202 1059 I 1201 1059 I 1201 1058 I 1201 1058 I 1201 1057 I 1201 1057 I 1201 1056 I 1201 1056 I 1201 1056 I C 
1233 1049 M 1251 1045 I 1251 1045 I 1252 1045 I 1253 1046 I 1253 1047 I 1252 1047 I 1252 1048 I 1251 1048 I 1233 1052 I 1233 1052 I 1232 1051 I 1232 1050 I 1232 1050 I 1232 1049 I 1233 1049 I 1233 1049 I C 
1264 1043 M 1282 1039 I 1283 1039 I 1283 1039 I 1284 1039 I 1284 1040 I 1284 1040 I 1283 1041 I 1283 1041 I 1265 1045 I 1264 1045 I 1264 1044 I 1263 1044 I 1263 1044 I 1263 1043 I 1264 1043 I 1264 1043 I C 
1296 1036 M 1314 1032 I 1314 1032 I 1315 1032 I 1316 1033 I 1316 1034 I 1315 1034 I 1314 1034 I 1296 1039 I 1296 1039 I 1295 1038 I 1295 1038 I 1295 1037 I 1295 1036 I 1296 1036 I 1296 1036 I C 
1326 1029 M 1345 1025 I 1346 1025 I 1346 1025 I 1346 1026 I 1346 1027 I 1346 1027 I 1346 1028 I 1327 1032 I 1326 1032 I 1326 1031 I 1326 1030 I 1326 1030 I 1326 1029 I 1326 1029 I 1326 1029 I C 
1358 1022 M 1365 1021 I 1366 1021 I 1366 1021 I 1366 1022 I 1366 1023 I 1366 1023 I 1366 1024 I 1359 1025 I 1357 1024 I 1357 1024 I 1357 1024 I 1357 1024 I 1357 1023 I 1357 1023 I 1358 1022 I 1358 1022 I C 
:  L ; K 
N 280 1254 M 279 1250 I 277 1248 I 275 1245 I 272 1244 I 270 1242 I 266 1241 I 263 1240 I 260 1241 I 256 1242 I 253 1244 I 250 1246 I 249 1249 I 247 1251 I 246 1254 I 246 1258 I 246 1261 I 246 1261 I 247 1264 I 249 1267 I 251 1269 I 254 1272 I 256 1274 I 260 1274 I 263 1274 I 266 1274 I 270 1273 I 273 1271 I 275 1269 I 277 1267 I 279 1264 I 280 1260 I 280 1257 I 280 1254 I C 
 O 3 Lw solid N 903 187 M 903 180 I 904 174 I 904 167 I 905 161 I 907 149 I 910 137 I 914 126 I 918 115 I 923 105 I 929 96 I 931 92 I 935 88 I 938 85 I 941 81 I 945 78 I 949 75 I 952 72 I 956 70 I 960 67 I 965 65 I 969 63 I 973 62 I 977 60 I 981 60 I 986 60 I 991 60 I : [ 0.832 0 0 0.832 0 0 ] concat K 
; N 960 90 M 991 60 I 960 29 I : [ 0.832 0 0 0.832 0 0 ] concat K 
; N 578 249 M 578 240 I 578 230 I 577 221 I 576 213 I 575 205 I 573 197 I 571 190 I 570 182 I 567 175 I 565 169 I 561 162 I 558 156 I 555 150 I 551 145 I 547 140 I 543 136 I 539 132 I 534 129 I 530 125 I 525 122 I 520 120 I 514 118 I 509 116 I 503 115 I 497 115 I 491 115 I 485 115 I 479 115 I 472 117 I 466 119 I 460 121 I 453 124 I : [ 0.832 0 0 0.832 0 0 ] concat K 
; N 493 139 M 453 124 I 468 83 I : [ 0.832 0 0 0.832 0 0 ] concat K 
; N 436 1220 M 436 1214 I 436 1209 I 435 1204 I 434 1199 I 433 1194 I 430 1189 I 429 1184 I 426 1179 I 424 1174 I 421 1169 I 418 1164 I 415 1160 I 411 1156 I 407 1152 I 403 1148 I 399 1144 I 390 1137 I 380 1131 I 375 1129 I 370 1125 I 364 1124 I 358 1121 I 352 1119 I 346 1118 I 340 1116 I 334 1115 I 328 1114 I 321 1114 I 315 1113 I 308 1113 I 308 1113 I : [ 0.832 0 0 0.832 0 0 ] concat K 
; N 339 1082 M 308 1113 I 339 1144 I : [ 0.832 0 0 0.832 0 0 ] concat K 
; 343 1028 M (View limit )[73 27 45 72 25 28 27 78 27 28  0]xS 
450 1148 M (angle)[44 50 50 28  0]xS 

%%IncludeResource: font Times-Italic
/Times-Italic FontHasEuro not
{
/Euro.Times-Italic
 [500 0 23 -7 578 676 ] 
<A2F8880DDBDB03F7F8A003F88D9D0384A701F79DBB01F802BB01F91CA7018F0ADBDB03F7
F8A003F88D9D0384A701F79DBB01F802BB01F89CF71301F8BFF93315770680758A89818B
08848B79947592088F0ADBDB03F7F8A003F88D9D0384A701F79DBB01F802BB01F91CA701
75916F926D8B08FB0E8B27FB0A5BFB24084606735B05D6068879857A8A79084A06745B05
DD068A7D8A7C8B7C08FB01B3FB0BF7101EA28BA4919E94089D94948F928B08928B8D858D
7508A006B0F72205780679674E3D438B08477BD1D11F8BB290B28FA508F76306A2BB05FB
71068D9D929C8F9D08F77E06A3BB05FB88069FDEC8F72BEC8B08D9B757461F84078F0ADB
DB03F7F8A003F88D9D0384A701F79DBB01F802BB01F89CF713019D06090E>
AddEuroGlyph
/Euro /Times-Italic /Times-Italic-Copy BuildNewFont
} if
F /F1 0 /256 T /Times-Italic mF 
/F1S84YFFFFFF7B F1 [132.523 0 0 -132.492 0 0 ] mFS
F1S84YFFFFFF7B Ji 
119 1303 M (N)S 
F0S64YFFFFFF9C Ji 
1447 878 M (V)S 
1519 878 M (i)S  1547 878 M (e)S  1591 878 M (w)S  1664 878 M ( )S  1689 878 M (l)S  1716 878 M (i)S  1744 878 M (m)S  1821 878 M (i)S  1849 878 M (t)S  1876 878 M ( )S  
1537 998 M (vertex)[50 44 33 28 44  0]xS 
N 1369 1027 M 1376 1034 I 1384 1039 I 1391 1045 I 1398 1051 I 1406 1056 I 1413 1060 I 1421 1064 I 1428 1068 I 1436 1071 I 1443 1074 I 1450 1077 I 1457 1079 I 1465 1080 I 1471 1081 I 1478 1082 I 1485 1082 I 1491 1082 I 1498 1081 I 1505 1080 I 1511 1079 I 1516 1077 I 1522 1074 I 1528 1072 I 1533 1069 I 1538 1065 I 1543 1061 I 1548 1056 I 1552 1052 I 1556 1046 I 1560 1040 I 1563 1034 I 1566 1028 I : [ 0.832 0 0 0.832 0 0 ] concat K 
; N 1526 1044 M 1566 1028 I 1582 1068 I : [ 0.832 0 0 0.832 0 0 ] concat K 
; LH
%%PageTrailer

%%Trailer
%%DocumentNeededResources: 
%%+ font Times-Roman
%%+ font Times-Italic
%%DocumentSuppliedResources: 
%%+ procset Pscript_WinNT_ErrorHandler 5.0 0
%%+ procset Pscript_FatalError 5.0 0
%%+ procset Pscript_Win_Basic 5.0 0
%%+ procset Pscript_Win_Utils_L2 5.0 0
%%+ procset Pscript_Text 5.0 0
%%+ procset Pscript_Encoding256 5.0 0
%%+ procset Pscript_Win_Euro_L2 5.0 0
%%+ procset Pscript_Win_GdiObject 5.0 0
%%+ procset Pscript_Win_GdiObject_L2 5.0 0
Pscript_WinNT_Incr dup /terminate get exec
%%EOF
